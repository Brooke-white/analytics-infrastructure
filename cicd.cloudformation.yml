AWSTemplateFormatVersion: 2010-09-09

Description: Cicd resources for analytics stack

Resources:
  EcrRepository:
    Type: AWS::ECR::Repository
    Properties: 
      RepositoryName: !Sub ${AWS::StackName}
  
  # This user will have a key and secret manually generated and saved to GitHub
  # Actions Secrets for this repository. These secrets are referenced in the
  # "ci-deploy.yml" workflow. 
  GitHubActionsDeployer:
    Type: AWS::IAM::User
    Properties:
      Policies:
        - PolicyName: EcrRepositoryAccess
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                Resource: "*"
              - Effect: Allow
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:PutImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload
                Resource: !GetAtt EcrRepository.Arn
              - Effect: Allow
                Action:
                  - cloudformation:DescribeStacks
                  - cloudformation:CreateStack
                  - cloudformation:UpdateStack
                  - cloudformation:DeleteStack
                  - cloudformation:CreateChangeSet
                Resource:
                  - !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/analytics/*
              - Effect: Allow
                Action:
                  # AWS::IAM::Role
                  - iam:CreateRole
                  - iam:PutRolePermissionsBoundary
                  # Managed policies attached to a Role
                  - iam:AttachRolePolicy
                  - iam:DetachRolePolicy
                  # Inline policies embedded in a Role
                  - iam:PutRolePolicy
                  - iam:DeleteRolePolicy
                NotResource: !Sub "arn:aws:iam::${AWS::AccountId}:role/admin/*"
                # Require DevPermissions boundary on all Roles, e.g.:
                # PermissionsBoundary: !ImportValue IAM-DevPermissions
                # Condition:
                #   StringEquals:
                #     iam:PermissionsBoundary: !Ref DevPermissions

Outputs:
  AnalyticsEcrRepositoryName:
    Description: ECR Repository for analytics docker images
    Value: !Ref EcrRepository
    Export: {Name: AnalyticsEcrRepositoryName}
